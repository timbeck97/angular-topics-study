{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalComponent } from 'src/app/modal/modal.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"../../modal/modal.component\";\nimport * as i4 from \"../../util/formatter.directive\";\nfunction CadatroContaComponent_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"Required Field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CadatroContaComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1, \"Required Field\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class CadatroContaComponent {\n  constructor() {\n    this.save = new EventEmitter();\n    this.formulario = new FormGroup({\n      descricao: new FormControl(null, Validators.required),\n      valor: new FormControl(null, Validators.required),\n      formaPagamento: new FormControl('CARTAO', Validators.required),\n      categoria: new FormControl('LASER', Validators.required)\n    });\n  }\n  ngOnInit() {\n    console.log('iniciou componente cadastro de conta');\n  }\n  ngOnDestroy() {\n    console.log('cadastro de conta destruiu');\n  }\n  ngOnChanges() {\n    this.formulario.patchValue(this.gasto);\n  }\n  onSubmit() {\n    if (this.formulario.valid) {\n      this.save.emit(this.formulario.value);\n      this.formulario.reset();\n      this.closeCadastro();\n    } else {\n      //this.verificaValidacoesForm(this.formulario);\n    }\n  }\n  openCadastro() {\n    this.element?.openModal();\n  }\n  closeCadastro() {\n    this.element?.closeModal();\n  }\n  verificaValidTouched(campo) {\n    return !this.formulario.get(campo)?.valid && this.formulario.get(campo)?.touched;\n  }\n}\nCadatroContaComponent.ɵfac = function CadatroContaComponent_Factory(t) {\n  return new (t || CadatroContaComponent)();\n};\nCadatroContaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CadatroContaComponent,\n  selectors: [[\"app-cadatro-conta\"]],\n  viewQuery: function CadatroContaComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(ModalComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.element = _t.first);\n    }\n  },\n  inputs: {\n    gasto: \"gasto\"\n  },\n  outputs: {\n    save: \"save\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 44,\n  vars: 15,\n  consts: [[\"title\", \"Adicionar Gasto\"], [\"element\", \"\"], [\"body\", \"\", 3, \"formGroup\"], [1, \"row\", \"input\"], [1, \"col-md-12\"], [1, \"form-group\"], [\"for\", \"idxDescricao\"], [\"type\", \"text\", \"id\", \"idxDescricao\", \"formControlName\", \"descricao\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"spanRequired\", 4, \"ngIf\"], [\"for\", \"idxValor\"], [\"type\", \"text\", \"id\", \"idxValor\", \"formatterDirective\", \"\", \"tipo\", \"double2Decimal\", \"formControlName\", \"valor\", 1, \"form-control\", 3, \"ngClass\"], [1, \"row\"], [\"for\", \"tipoIdx\"], [\"id\", \"tipoIdx\", \"formControlName\", \"formaPagamento\", \"required\", \"\", 1, \"form-select\"], [3, \"value\"], [\"for\", \"classificacaoIdx\"], [\"id\", \"tipoIdx\", \"formControlName\", \"categoria\", \"required\", \"\", 1, \"form-select\"], [\"footer\", \"\", 1, \"row\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"spanRequired\"]],\n  template: function CadatroContaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-modal\", 0, 1)(2, \"form\", 2)(3, \"div\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"label\", 6);\n      i0.ɵɵtext(7, \"Descri\\u00E7\\u00E3o\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"input\", 7);\n      i0.ɵɵtemplate(9, CadatroContaComponent_span_9_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(10, \"div\", 3)(11, \"div\", 4)(12, \"div\", 5)(13, \"label\", 9);\n      i0.ɵɵtext(14, \"Valor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 10);\n      i0.ɵɵtemplate(16, CadatroContaComponent_span_16_Template, 2, 0, \"span\", 8);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(17, \"div\", 11)(18, \"div\", 4)(19, \"div\", 5)(20, \"label\", 12);\n      i0.ɵɵtext(21, \"Forma de pagamento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"select\", 13)(23, \"option\", 14);\n      i0.ɵɵtext(24, \"Cart\\u00E3o\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"option\", 14);\n      i0.ɵɵtext(26, \"PIX\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(27, \"div\", 3)(28, \"div\", 4)(29, \"div\", 5)(30, \"label\", 15);\n      i0.ɵɵtext(31, \"Categoria\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(32, \"select\", 16)(33, \"option\", 14);\n      i0.ɵɵtext(34, \"Laser\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"option\", 14);\n      i0.ɵɵtext(36, \"Gasolina\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(37, \"option\", 14);\n      i0.ɵɵtext(38, \"Sa\\u00FAde\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(39, \"option\", 14);\n      i0.ɵɵtext(40, \"Outros\");\n      i0.ɵɵelementEnd()()()()()();\n      i0.ɵɵelementStart(41, \"div\", 17)(42, \"button\", 18);\n      i0.ɵɵlistener(\"click\", function CadatroContaComponent_Template_button_click_42_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(43, \"Salvar\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"formGroup\", ctx.formulario);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.verificaValidTouched(\"descricao\")));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.verificaValidTouched(\"descricao\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.verificaValidTouched(\"valor\")));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.verificaValidTouched(\"valor\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"value\", \"CARTAO\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", \"PIX\");\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"value\", \"LASER\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", \"GASOLINA\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", \"SAUDE\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", \"OUTROS\");\n    }\n  },\n  dependencies: [i1.NgClass, i1.NgIf, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.FormGroupDirective, i2.FormControlName, i3.ModalComponent, i4.FormatterDirective],\n  styles: [\"input[_ngcontent-%COMP%]{\\n    font-weight: 200;\\n    margin: 5px 0px;\\n}\\nlabel[_ngcontent-%COMP%]{\\n    font-weight: 400;\\n}\\nselect[_ngcontent-%COMP%]{\\n    font-weight: 200;\\n    margin-top: 5px;\\n}\\n.spanRequired[_ngcontent-%COMP%]{\\n    color:red;\\n    font-size: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmluYW5jZXMvY2FkYXRyby1jb250YS9jYWRhdHJvLWNvbnRhLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsZUFBZTtBQUNuQjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsZUFBZTtBQUNuQjtBQUNBO0lBQ0ksU0FBUztJQUNULGVBQWU7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dHtcbiAgICBmb250LXdlaWdodDogMjAwO1xuICAgIG1hcmdpbjogNXB4IDBweDtcbn1cbmxhYmVse1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5zZWxlY3R7XG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG59XG4uc3BhblJlcXVpcmVke1xuICAgIGNvbG9yOnJlZDtcbiAgICBmb250LXNpemU6IDEycHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AAAA,SAAgCA,YAAY,QAAqD,eAAe;AAChH,SAASC,WAAW,EAAEC,SAAS,EAAEC,UAAU,QAAQ,gBAAgB;AACnE,SAASC,cAAc,QAAQ,+BAA+B;;;;;;;;ICMlDC,gCAAqE;IAAAA,8BAAc;IAAAA,iBAAO;;;;;IAU1FA,gCAAiE;IAAAA,8BAAc;IAAAA,iBAAO;;;;;;;;ADTlG,OAAM,MAAOC,qBAAqB;EAWhCC;IAJA,SAAI,GAAG,IAAIP,YAAY,EAAE;IAKvB,IAAI,CAACQ,UAAU,GAAG,IAAIN,SAAS,CAAC;MAC9BO,SAAS,EAAE,IAAIR,WAAW,CAAC,IAAI,EAAEE,UAAU,CAACO,QAAQ,CAAC;MACrDC,KAAK,EAAE,IAAIV,WAAW,CAAC,IAAI,EAAEE,UAAU,CAACO,QAAQ,CAAC;MACjDE,cAAc,EAAE,IAAIX,WAAW,CAAC,QAAQ,EAAEE,UAAU,CAACO,QAAQ,CAAC;MAC9DG,SAAS,EAAE,IAAIZ,WAAW,CAAC,OAAO,EAAEE,UAAU,CAACO,QAAQ;KACxD,CAAC;EACJ;EACAI,QAAQ;IACNC,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;EACrD;EACAC,WAAW;IACTF,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;EAC3C;EACAE,WAAW;IACT,IAAI,CAACV,UAAU,CAACW,UAAU,CAAC,IAAI,CAACC,KAAK,CAAC;EACxC;EACAC,QAAQ;IACN,IAAI,IAAI,CAACb,UAAU,CAACc,KAAK,EAAE;MACzB,IAAI,CAACC,IAAI,CAACC,IAAI,CAAC,IAAI,CAAChB,UAAU,CAACiB,KAAK,CAAC;MACrC,IAAI,CAACjB,UAAU,CAACkB,KAAK,EAAE;MACvB,IAAI,CAACC,aAAa,EAAE;KACrB,MAAM;MACL;IAAA;EAEJ;EACAC,YAAY;IACV,IAAI,CAACC,OAAO,EAAEC,SAAS,EAAE;EAC3B;EACAH,aAAa;IACX,IAAI,CAACE,OAAO,EAAEE,UAAU,EAAE;EAC5B;EACAC,oBAAoB,CAACC,KAAa;IAChC,OAAO,CAAC,IAAI,CAACzB,UAAU,CAAC0B,GAAG,CAACD,KAAK,CAAC,EAAEX,KAAK,IAAI,IAAI,CAACd,UAAU,CAAC0B,GAAG,CAACD,KAAK,CAAC,EAAEE,OAAO;EAClF;;AA7CW7B,qBAAqB;mBAArBA,qBAAqB;AAAA;AAArBA,qBAAqB;QAArBA,qBAAqB;EAAA8B;EAAAC;IAAA;qBAIrBjC,cAAc;;;;;;;;;;;;;;;;;;;MCb3BC,uCAA4C;MAKNA,mCAAS;MAAAA,iBAAQ;MAC3CA,2BAC2F;MAC3FA,wEAA0F;MAC5FA,iBAAM;MAGVA,+BAAuB;MAGKA,sBAAK;MAAAA,iBAAQ;MACnCA,6BACmF;MACnFA,0EAAsF;MACxFA,iBAAM;MAGVA,gCAAiB;MAGUA,mCAAkB;MAAAA,iBAAQ;MAC/CA,mCAAoF;MACvDA,4BAAM;MAAAA,iBAAS;MAC1CA,mCAAwB;MAAAA,oBAAG;MAAAA,iBAAS;MAK5CA,+BAAuB;MAGaA,0BAAS;MAAAA,iBAAQ;MAC/CA,mCAA+E;MACnDA,sBAAK;MAAAA,iBAAS;MACxCA,mCAA6B;MAAAA,yBAAQ;MAAAA,iBAAS;MAC9CA,mCAA0B;MAAAA,2BAAK;MAAAA,iBAAS;MACxCA,mCAA2B;MAAAA,uBAAM;MAAAA,iBAAS;MAapDA,gCAAwB;MACUA;QAAA,OAASiC,cAAU;MAAA,EAAC;MAACjC,uBAAM;MAAAA,iBAAS;;;MAtD3DA,eAAwB;MAAxBA,0CAAwB;MAMzBA,eAA4D;MAA5DA,4FAA4D;MAClCA,eAAuC;MAAvCA,4DAAuC;MASjEA,eAAwD;MAAxDA,wFAAwD;MAC9BA,eAAmC;MAAnCA,wDAAmC;MASrDA,eAAkB;MAAlBA,gCAAkB;MAClBA,eAAe;MAAfA,6BAAe;MAUfA,eAAiB;MAAjBA,+BAAiB;MACjBA,eAAoB;MAApBA,kCAAoB;MACpBA,eAAiB;MAAjBA,+BAAiB;MACjBA,eAAkB;MAAlBA,gCAAkB","names":["EventEmitter","FormControl","FormGroup","Validators","ModalComponent","i0","CadatroContaComponent","constructor","formulario","descricao","required","valor","formaPagamento","categoria","ngOnInit","console","log","ngOnDestroy","ngOnChanges","patchValue","gasto","onSubmit","valid","save","emit","value","reset","closeCadastro","openCadastro","element","openModal","closeModal","verificaValidTouched","campo","get","touched","selectors","viewQuery","ctx"],"sourceRoot":"","sources":["/home/tim/Tim/angular/angular-topics-study/frontend/src/app/finances/cadatro-conta/cadatro-conta.component.ts","/home/tim/Tim/angular/angular-topics-study/frontend/src/app/finances/cadatro-conta/cadatro-conta.component.html"],"sourcesContent":["import { Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalComponent } from 'src/app/modal/modal.component';\n\n@Component({\n  selector: 'app-cadatro-conta',\n  templateUrl: './cadatro-conta.component.html',\n  styleUrls: ['./cadatro-conta.component.css']\n})\nexport class CadatroContaComponent implements OnInit, OnDestroy{\n\n  formulario: FormGroup;\n\n  @ViewChild(ModalComponent)\n  element: ModalComponent | undefined;\n  @Output()\n  save = new EventEmitter();\n\n  @Input()\n  gasto: any;\n  constructor() {\n    this.formulario = new FormGroup({\n      descricao: new FormControl(null, Validators.required),\n      valor: new FormControl(null, Validators.required),\n      formaPagamento: new FormControl('CARTAO', Validators.required),\n      categoria: new FormControl('LASER', Validators.required),\n    })\n  }\n  ngOnInit(): void {\n    console.log('iniciou componente cadastro de conta')\n  }\n  ngOnDestroy(): void {\n    console.log('cadastro de conta destruiu')\n  }\n  ngOnChanges(): void {\n    this.formulario.patchValue(this.gasto); \n  }\n  onSubmit() {\n    if (this.formulario.valid) {\n      this.save.emit(this.formulario.value);\n      this.formulario.reset();\n      this.closeCadastro();\n    } else {\n      //this.verificaValidacoesForm(this.formulario);\n    }\n  }\n  openCadastro() {\n    this.element?.openModal();\n  }\n  closeCadastro() {\n    this.element?.closeModal();\n  }\n  verificaValidTouched(campo: string) {\n    return !this.formulario.get(campo)?.valid && this.formulario.get(campo)?.touched;\n  }\n\n}\n","<app-modal title=\"Adicionar Gasto\" #element>\n    <form body [formGroup]=\"formulario\">\n      <div class=\"row input\">\n        <div class=\"col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"idxDescricao\">Descrição</label>\n            <input type=\"text\" class=\"form-control\" id=\"idxDescricao\"\n              [ngClass]=\"{'is-invalid':verificaValidTouched('descricao')}\" formControlName=\"descricao\">\n            <span class=\"spanRequired\" *ngIf=\"verificaValidTouched('descricao')\">Required Field</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"row input\">\n        <div class=\"col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"idxValor\">Valor</label>\n            <input type=\"text\" class=\"form-control\" id=\"idxValor\" formatterDirective tipo=\"double2Decimal\"\n              [ngClass]=\"{'is-invalid':verificaValidTouched('valor')}\" formControlName=\"valor\">\n            <span class=\"spanRequired\" *ngIf=\"verificaValidTouched('valor')\">Required Field</span>\n          </div>\n        </div>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"tipoIdx\">Forma de pagamento</label>\n            <select class=\"form-select\" id=\"tipoIdx\"  formControlName=\"formaPagamento\" required>\n              <option [value]=\"'CARTAO'\">Cartão</option>\n              <option [value]=\"'PIX'\">PIX</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <div class=\"row input\">\n        <div class=\"col-md-12\">\n          <div class=\"form-group\">\n            <label for=\"classificacaoIdx\">Categoria</label>\n            <select class=\"form-select\" id=\"tipoIdx\"  formControlName=\"categoria\" required>\n              <option [value]=\"'LASER'\">Laser</option>\n              <option [value]=\"'GASOLINA'\">Gasolina</option>\n              <option [value]=\"'SAUDE'\">Saúde</option>\n              <option [value]=\"'OUTROS'\">Outros</option>\n            </select>\n          </div>\n        </div>\n      </div>\n      <!-- <div class=\"row\">\n        <div class=\"col-md-12\">\n          <pre>\n            {{formulario.value | json}}\n          </pre>\n        </div>\n      </div> -->\n    </form>\n    <div footer class=\"row\">\n      <button class=\"btn btn-primary\" (click)=\"onSubmit()\">Salvar</button>\n    </div>\n  </app-modal>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}