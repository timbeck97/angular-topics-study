{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-bootstrap/modal\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"../../util/formatter.directive\";\nfunction CadatroContaComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \"Required Field\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CadatroContaComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 22);\n    i0.ɵɵtext(1, \"Required Field\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"is-invalid\": a0\n  };\n};\nexport class CadatroContaComponent {\n  constructor(modalRef) {\n    this.modalRef = modalRef;\n    this.formulario = new Fo();\n    this.save = new EventEmitter();\n  }\n  ngOnInit() {\n    if (this.gasto) {\n      this.formulario.patchValue(this.gasto);\n    } else {\n      this.formulario = new FormGroup({\n        descricao: new FormControl(null, Validators.required),\n        valor: new FormControl(null, Validators.required),\n        formaPagamento: new FormControl('CARTAO', Validators.required),\n        categoria: new FormControl('LASER', Validators.required)\n      });\n    }\n    console.log('iniciou componente cadastro de conta');\n  }\n  ngOnDestroy() {\n    console.log('cadastro de conta destruiu');\n  }\n  // ngOnChanges(): void {\n  //   this.formulario.patchValue(this.gasto); \n  // }\n  onSubmit() {\n    if (this.formulario.valid) {\n      this.save.emit(this.formulario.value);\n      this.formulario.reset();\n    } else {\n      //this.verificaValidacoesForm(this.formulario);\n    }\n  }\n  verificaValidTouched(campo) {\n    return !this.formulario.get(campo)?.valid && this.formulario.get(campo)?.touched;\n  }\n}\nCadatroContaComponent.ɵfac = function CadatroContaComponent_Factory(t) {\n  return new (t || CadatroContaComponent)(i0.ɵɵdirectiveInject(i1.BsModalRef));\n};\nCadatroContaComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CadatroContaComponent,\n  selectors: [[\"app-cadatro-conta\"]],\n  inputs: {\n    gasto: \"gasto\"\n  },\n  outputs: {\n    save: \"save\"\n  },\n  decls: 48,\n  vars: 15,\n  consts: [[1, \"modal-header\"], [1, \"modal-title\"], [\"type\", \"button\", \"aria-label\", \"Close\", 1, \"btn-close\"], [1, \"modal-body\"], [\"body\", \"\", 3, \"formGroup\"], [1, \"row\", \"input\"], [1, \"col-md-12\"], [1, \"form-group\"], [\"for\", \"idxDescricao\"], [\"type\", \"text\", \"id\", \"idxDescricao\", \"formControlName\", \"descricao\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"spanRequired\", 4, \"ngIf\"], [\"for\", \"idxValor\"], [\"type\", \"text\", \"id\", \"idxValor\", \"formatterDirective\", \"\", \"tipo\", \"double2Decimal\", \"formControlName\", \"valor\", 1, \"form-control\", 3, \"ngClass\"], [1, \"row\"], [\"for\", \"tipoIdx\"], [\"id\", \"tipoIdx\", \"formControlName\", \"formaPagamento\", \"required\", \"\", 1, \"form-select\"], [3, \"value\"], [\"for\", \"classificacaoIdx\"], [\"id\", \"tipoIdx\", \"formControlName\", \"categoria\", \"required\", \"\", 1, \"form-select\"], [1, \"modal-footer\"], [\"footer\", \"\", 1, \"row\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"spanRequired\"]],\n  template: function CadatroContaComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h4\", 1);\n      i0.ɵɵtext(2, \"Hi there!\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(3, \"button\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3)(5, \"form\", 4)(6, \"div\", 5)(7, \"div\", 6)(8, \"div\", 7)(9, \"label\", 8);\n      i0.ɵɵtext(10, \"Descri\\u00E7\\u00E3o\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 9);\n      i0.ɵɵtemplate(12, CadatroContaComponent_span_12_Template, 2, 0, \"span\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"div\", 6)(15, \"div\", 7)(16, \"label\", 11);\n      i0.ɵɵtext(17, \"Valor\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(18, \"input\", 12);\n      i0.ɵɵtemplate(19, CadatroContaComponent_span_19_Template, 2, 0, \"span\", 10);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(20, \"div\", 13)(21, \"div\", 6)(22, \"div\", 7)(23, \"label\", 14);\n      i0.ɵɵtext(24, \"Forma de pagamento\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"select\", 15)(26, \"option\", 16);\n      i0.ɵɵtext(27, \"Cart\\u00E3o\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(28, \"option\", 16);\n      i0.ɵɵtext(29, \"PIX\");\n      i0.ɵɵelementEnd()()()()();\n      i0.ɵɵelementStart(30, \"div\", 5)(31, \"div\", 6)(32, \"div\", 7)(33, \"label\", 17);\n      i0.ɵɵtext(34, \"Categoria\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(35, \"select\", 18)(36, \"option\", 16);\n      i0.ɵɵtext(37, \"Laser\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"option\", 16);\n      i0.ɵɵtext(39, \"Gasolina\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(40, \"option\", 16);\n      i0.ɵɵtext(41, \"Sa\\u00FAde\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"option\", 16);\n      i0.ɵɵtext(43, \"Outros\");\n      i0.ɵɵelementEnd()()()()()()();\n      i0.ɵɵelementStart(44, \"div\", 19)(45, \"div\", 20)(46, \"button\", 21);\n      i0.ɵɵlistener(\"click\", function CadatroContaComponent_Template_button_click_46_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵtext(47, \"Salvar\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formGroup\", ctx.formulario);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(11, _c0, ctx.verificaValidTouched(\"descricao\")));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.verificaValidTouched(\"descricao\"));\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c0, ctx.verificaValidTouched(\"valor\")));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.verificaValidTouched(\"valor\"));\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"value\", \"CARTAO\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", \"PIX\");\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"value\", \"LASER\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", \"GASOLINA\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", \"SAUDE\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"value\", \"OUTROS\");\n    }\n  },\n  dependencies: [i2.NgClass, i2.NgIf, i3.ɵNgNoValidate, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i3.DefaultValueAccessor, i3.SelectControlValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.FormGroupDirective, i3.FormControlName, i4.FormatterDirective],\n  styles: [\"input[_ngcontent-%COMP%]{\\n    font-weight: 200;\\n    margin: 5px 0px;\\n}\\nlabel[_ngcontent-%COMP%]{\\n    font-weight: 400;\\n}\\nselect[_ngcontent-%COMP%]{\\n    font-weight: 200;\\n    margin-top: 5px;\\n}\\n.spanRequired[_ngcontent-%COMP%]{\\n    color:red;\\n    font-size: 12px;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmluYW5jZXMvY2FkYXRyby1jb250YS9jYWRhdHJvLWNvbnRhLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsZUFBZTtBQUNuQjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxnQkFBZ0I7SUFDaEIsZUFBZTtBQUNuQjtBQUNBO0lBQ0ksU0FBUztJQUNULGVBQWU7QUFDbkIiLCJzb3VyY2VzQ29udGVudCI6WyJpbnB1dHtcbiAgICBmb250LXdlaWdodDogMjAwO1xuICAgIG1hcmdpbjogNXB4IDBweDtcbn1cbmxhYmVse1xuICAgIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5zZWxlY3R7XG4gICAgZm9udC13ZWlnaHQ6IDIwMDtcbiAgICBtYXJnaW4tdG9wOiA1cHg7XG59XG4uc3BhblJlcXVpcmVke1xuICAgIGNvbG9yOnJlZDtcbiAgICBmb250LXNpemU6IDEycHg7XG59XG4iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"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","names":["EventEmitter","FormControl","FormGroup","Validators","i0","CadatroContaComponent","constructor","modalRef","Fo","ngOnInit","gasto","formulario","patchValue","descricao","required","valor","formaPagamento","categoria","console","log","ngOnDestroy","onSubmit","valid","save","emit","value","reset","verificaValidTouched","campo","get","touched","selectors","inputs","outputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/home/tim/Tim/angular/angular-topics-study/frontend/src/app/finances/cadatro-conta/cadatro-conta.component.ts","/home/tim/Tim/angular/angular-topics-study/frontend/src/app/finances/cadatro-conta/cadatro-conta.component.html"],"sourcesContent":["import { Component, ElementRef, EventEmitter, Input, OnDestroy, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { ModalComponent } from 'src/app/modal/modal.component';\n\n@Component({\n  selector: 'app-cadatro-conta',\n  templateUrl: './cadatro-conta.component.html',\n  styleUrls: ['./cadatro-conta.component.css']\n})\nexport class CadatroContaComponent implements OnInit, OnDestroy{\n\n  formulario: FormGroup=new Fo\n\n\n  @Output()\n  save = new EventEmitter();\n\n  @Input()\n  gasto: any;\n  constructor(private modalRef:BsModalRef) {\n    \n \n    \n  }\n  ngOnInit(): void {\n    if(this.gasto){\n      this.formulario.patchValue(this.gasto);\n    }else{\n      this.formulario = new FormGroup({\n        descricao: new FormControl(null, Validators.required),\n        valor: new FormControl(null, Validators.required),\n        formaPagamento: new FormControl('CARTAO', Validators.required),\n        categoria: new FormControl('LASER', Validators.required),\n      })\n    }\n    \n    console.log('iniciou componente cadastro de conta')\n  }\n  ngOnDestroy(): void {\n    console.log('cadastro de conta destruiu')\n  }\n  // ngOnChanges(): void {\n  //   this.formulario.patchValue(this.gasto); \n  // }\n  onSubmit() {\n    if (this.formulario.valid) {\n      this.save.emit(this.formulario.value);\n      this.formulario.reset();\n    \n    } else {\n      //this.verificaValidacoesForm(this.formulario);\n    }\n  }\n\n  verificaValidTouched(campo: string) {\n    return !this.formulario.get(campo)?.valid && this.formulario.get(campo)?.touched;\n  }\n\n}\n","<div class=\"modal-header\">\n  <h4 class=\"modal-title\">Hi there!</h4>\n  <button type=\"button\" class=\"btn-close\" aria-label=\"Close\"></button>\n</div>\n<div class=\"modal-body\">\n  <form body [formGroup]=\"formulario\">\n    <div class=\"row input\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"idxDescricao\">Descrição</label>\n          <input type=\"text\" class=\"form-control\" id=\"idxDescricao\"\n            [ngClass]=\"{'is-invalid':verificaValidTouched('descricao')}\" formControlName=\"descricao\">\n          <span class=\"spanRequired\" *ngIf=\"verificaValidTouched('descricao')\">Required Field</span>\n        </div>\n      </div>\n    </div>\n    <div class=\"row input\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"idxValor\">Valor</label>\n          <input type=\"text\" class=\"form-control\" id=\"idxValor\" formatterDirective tipo=\"double2Decimal\"\n            [ngClass]=\"{'is-invalid':verificaValidTouched('valor')}\" formControlName=\"valor\">\n          <span class=\"spanRequired\" *ngIf=\"verificaValidTouched('valor')\">Required Field</span>\n        </div>\n      </div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"tipoIdx\">Forma de pagamento</label>\n          <select class=\"form-select\" id=\"tipoIdx\" formControlName=\"formaPagamento\" required>\n            <option [value]=\"'CARTAO'\">Cartão</option>\n            <option [value]=\"'PIX'\">PIX</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <div class=\"row input\">\n      <div class=\"col-md-12\">\n        <div class=\"form-group\">\n          <label for=\"classificacaoIdx\">Categoria</label>\n          <select class=\"form-select\" id=\"tipoIdx\" formControlName=\"categoria\" required>\n            <option [value]=\"'LASER'\">Laser</option>\n            <option [value]=\"'GASOLINA'\">Gasolina</option>\n            <option [value]=\"'SAUDE'\">Saúde</option>\n            <option [value]=\"'OUTROS'\">Outros</option>\n          </select>\n        </div>\n      </div>\n    </div>\n    <!-- <div class=\"row\">\n      <div class=\"col-md-12\">\n        <pre>\n          {{formulario.value | json}}\n        </pre>\n      </div>\n    </div> -->\n  </form>\n</div>\n<div class=\"modal-footer\">\n  <div footer class=\"row\">\n    <button class=\"btn btn-primary\" (click)=\"onSubmit()\">Salvar</button>\n  </div>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}